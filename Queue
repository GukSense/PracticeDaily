package test4;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class QueueTest {

//private static final int REGISTRATION = 0;
//	private static final int REGISTRATION = 1;
//	private static final int LIST = 2;
//	private static final int DELETE = 3;
	
	public static void main(String[] args) {
		/*
		문제 1.
		공지사항 등록, 목록, 삭제 기능을 코딩하세요.
		삭제 시 제일 오래된 공지사항을 삭제하세요.
		공지사항의 등록, 목록, 삭제 상수는 enum을 사용하세요.
		*/
		
		
		Notice n = new Notice();
		NoticeService ns = new NoticeService();
		Scanner scanner = new Scanner(System.in);
		
		
		boolean returnToFirst = true;
		
		while(returnToFirst) {
			boolean run = true;
			
		
			System.out.print("공지사항을 입력해주세요: ");
			n.setIntro(scanner.nextLine());
			scanner.nextLine();
			
			
			while(true) {
				System.out.println();
				System.out.println("공지사항 프로그램입니다. => 0.공지사항 등록 1.공지사항 목록 2.공지사항 삭제 3: 프로그램 종료");
				Menu[] arrMenu = Menu.values();
				Menu menu = arrMenu[scanner.nextInt()];
				//Menu menu = Menu.values()[scanner.nextInt()];
				
			
		
				
				switch(menu) {
				
					case REGISTRATION:
						
						NoticeService.addNotice(n);
						System.out.println("공지를 추가등록하시겠습니까? 1: YES 2: NO");
							switch(scanner.nextInt()) {
								case 1: 
									returnToFirst = true;
									run  = false;
									break;
								case 2:
									break;
							}
						break;
					case LIST:
						
						NoticeService.allPrintNoticeList();
						returnToFirst = false;
						break;
					case DELETE:
						NoticeService.deleTeNotice(n);
						returnToFirst = false;
						break;		
					case LOGOUT:
						run = false;
				}
				
				if (!run)
					break;
				

			}
			
			if(!returnToFirst == true) 
				break;
		
		}
		
		System.out.println("프로그램이 종료되었습니다.");
	}

}

class Notice {
	private String intro;
	
	public void setIntro(String intro) {
		this.intro = intro;
	}
	public String getIntro() {
		return intro;
	}
	
	public LocalDate getDate() {
		return LocalDate.now();
	}
	
	public String toString() {
		return "DATE: "+getDate() + " 공지: "+ getIntro(); 
	}
}
	
class NoticeService {
	public static Queue<Notice> q = new LinkedList<>();
	
	
	public static void addNotice(Notice n) {
		System.out.println("[공지등록]");
		q.offer(n);
	}
	
	public static void allPrintNoticeList() {
//		q = (Queue<Notice>) new ArrayList<Notice>();
		System.out.println("모든 공지 리스트");
		for (Notice n : q) {
			System.out.println(n);
		}
		
	}
	
	public static void deleTeNotice(Notice n) {
		System.out.println("제일 오래된 공지삭제 ");
		q.poll();
	}
	
	public void checkTheList() {
		for(Iterator<Notice> it = q.iterator(); it.hasNext(); ) {
			System.out.println(it.next());
		}
	}
}
	
	

enum Menu {
	
	REGISTRATION,
	LIST,
	DELETE,
	LOGOUT;
	
}
